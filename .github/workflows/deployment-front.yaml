name: Push Frontend

on:   
  push:
    branches:
    - main
    - master

    # Publish `v1.2.3` tags as releases.
    # tags:
    #   - front-*
env:
  IMAGE_NAME: ${{ github.event.repository.name }}
  # IMAGE_NAME: testworkflow-front

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: docker build front/ --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the PAT to PAT_TOKEN
        run: echo "${{ secrets.PAT_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          VERSION=latest

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # # Use Docker `latest` tag convention
          # [ "$VERSION" == "deployment" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo "image_name=$IMAGE_ID:$VERSION" >> $GITHUB_ENV

      - shell: bash
        run: |
          cat << EOF > deployment.yaml
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                annotations:
                  kompose.cmd: kompose convert
                  kompose.version: 1.26.1 (HEAD)
                creationTimestamp: null
                labels:
                  io.kompose.service: $IMAGE_NAME
                name: $IMAGE_NAME
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    io.kompose.service: $IMAGE_NAME
                strategy:
                  rollingUpdate:
                    maxSurge: 25%
                    maxUnavailable: 25%
                  type: RollingUpdate
                template:
                  metadata:
                    annotations:
                      kompose.cmd: kompose convert
                      kompose.version: 1.26.1 (HEAD)
                    creationTimestamp: null
                    labels:
                      io.kompose.service: $IMAGE_NAME
                  spec:
                    imagePullSecrets:
                      - name: dockerconfigjson-github-com
                    containers:
                      - args:
                        image: ghcr.io/jo4marseille/$IMAGE_NAME:latest
                        name: $IMAGE_NAME
                        ports:
                          - containerPort: 80
                        resources: {}
                    restartPolicy: Always
              status: {}
          ---
              apiVersion: v1
              kind: Service
              metadata:
                annotations:
                  kompose.cmd: kompose convert
                  kompose.version: 1.26.1 (HEAD)
                creationTimestamp: null
                labels:
                  io.kompose.service: $IMAGE_NAME
                name: $IMAGE_NAME
              spec:
                ports:
                  - name: "80"
                    port: 80
                    targetPort: 80
                selector:
                  io.kompose.service: $IMAGE_NAME
              status:
                loadBalancer: {}
          ---
              apiVersion: networking.k8s.io/v1
              kind: Ingress
              metadata:
                annotations:
                  cert-manager.io/cluster-issuer: letsencrypt
                  kubernetes.io/ingress.class: nginx
                creationTimestamp: null
                labels:
                  io.kompose.service: $IMAGE_NAME
                name: $IMAGE_NAME
              spec:
                rules:
                  - host: $IMAGE_NAME.jo4marseille.fr
                    http:
                      paths:
                        - backend:
                            service:
                              name: $IMAGE_NAME
                              port:
                                number: 80
                          path: /
                          pathType: Prefix
                tls:
                  - hosts:
                      - $IMAGE_NAME.jo4marseille.fr
                    secretName: $IMAGE_NAME-tls
          EOF
      - shell: bash
        run: |
          cat deployment.yaml

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.J4M_KUBE_CONFIG }}
        with:
            args: apply -f deployment.yaml
      # - uses: actions-hub/kubectl@master
      #   env:
      #     KUBE_CONFIG: ${{ secrets.J4M_KUBE_CONFIG }}
      #   with:
      #     args: rollout restart deployment joformrs-front
